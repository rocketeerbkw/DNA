//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 

namespace DnaIdentityWebServiceProxy
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "IdentityServicesImplPortBinding", Namespace = "http://opensso.idsvcs.identity.sun.com/")]
    public partial class IdentityServicesImplService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback logOperationCompleted;

        private System.Threading.SendOrPostCallback getAttributesOperationCompleted;

        private System.Threading.SendOrPostCallback getPersonalAttributesOperationCompleted;

        private System.Threading.SendOrPostCallback getUsernameAndEmailOperationCompleted;

        private System.Threading.SendOrPostCallback addPolicyOperationCompleted;

        private System.Threading.SendOrPostCallback deletePolicyOperationCompleted;

        private System.Threading.SendOrPostCallback getPolicyOperationCompleted;

        private System.Threading.SendOrPostCallback listPolicyNamesOperationCompleted;

        private System.Threading.SendOrPostCallback getRequiredAttributesOperationCompleted;

        private System.Threading.SendOrPostCallback authenticateOperationCompleted;

        private System.Threading.SendOrPostCallback authenticateWithAttributesOperationCompleted;

        private System.Threading.SendOrPostCallback resetPasswordOperationCompleted;

        private System.Threading.SendOrPostCallback deleteUserOperationCompleted;

        private System.Threading.SendOrPostCallback existsOperationCompleted;

        private System.Threading.SendOrPostCallback registerOperationCompleted;

        private System.Threading.SendOrPostCallback validLegacyCookieOperationCompleted;

        private System.Threading.SendOrPostCallback getCookieValueOperationCompleted;

        private System.Threading.SendOrPostCallback authenticateCookieValueOperationCompleted;

        private System.Threading.SendOrPostCallback authenticateTokenOperationCompleted;

        private System.Threading.SendOrPostCallback logoutOperationCompleted;

        private System.Threading.SendOrPostCallback authorizeOperationCompleted;

        private System.Threading.SendOrPostCallback setAttributesOperationCompleted;

        private System.Threading.SendOrPostCallback setPersonalAttributesOperationCompleted;

        private System.Threading.SendOrPostCallback isTokenValidOperationCompleted;

        private System.Threading.SendOrPostCallback getCookieNameForTokenOperationCompleted;

        private System.Threading.SendOrPostCallback getCookieNamesToForwardOperationCompleted;

        private System.Threading.SendOrPostCallback searchOperationCompleted;

        private System.Threading.SendOrPostCallback searchUserDetailsOperationCompleted;

        private System.Threading.SendOrPostCallback createOperationCompleted;

        private System.Threading.SendOrPostCallback readOperationCompleted;

        private System.Threading.SendOrPostCallback updateOperationCompleted;

        private System.Threading.SendOrPostCallback deleteOperationCompleted;

        /// <remarks/>
        public IdentityServicesImplService(string identityUrl)
        {
            this.Url = identityUrl;
        }

        /// <remarks/>
        public event logCompletedEventHandler logCompleted;

        /// <remarks/>
        public event getAttributesCompletedEventHandler getAttributesCompleted;

        /// <remarks/>
        public event getPersonalAttributesCompletedEventHandler getPersonalAttributesCompleted;

        /// <remarks/>
        public event getUsernameAndEmailCompletedEventHandler getUsernameAndEmailCompleted;

        /// <remarks/>
        public event addPolicyCompletedEventHandler addPolicyCompleted;

        /// <remarks/>
        public event deletePolicyCompletedEventHandler deletePolicyCompleted;

        /// <remarks/>
        public event getPolicyCompletedEventHandler getPolicyCompleted;

        /// <remarks/>
        public event listPolicyNamesCompletedEventHandler listPolicyNamesCompleted;

        /// <remarks/>
        public event getRequiredAttributesCompletedEventHandler getRequiredAttributesCompleted;

        /// <remarks/>
        public event authenticateCompletedEventHandler authenticateCompleted;

        /// <remarks/>
        public event authenticateWithAttributesCompletedEventHandler authenticateWithAttributesCompleted;

        /// <remarks/>
        public event resetPasswordCompletedEventHandler resetPasswordCompleted;

        /// <remarks/>
        public event deleteUserCompletedEventHandler deleteUserCompleted;

        /// <remarks/>
        public event existsCompletedEventHandler existsCompleted;

        /// <remarks/>
        public event registerCompletedEventHandler registerCompleted;

        /// <remarks/>
        public event validLegacyCookieCompletedEventHandler validLegacyCookieCompleted;

        /// <remarks/>
        public event getCookieValueCompletedEventHandler getCookieValueCompleted;

        /// <remarks/>
        public event authenticateCookieValueCompletedEventHandler authenticateCookieValueCompleted;

        /// <remarks/>
        public event authenticateTokenCompletedEventHandler authenticateTokenCompleted;

        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;

        /// <remarks/>
        public event authorizeCompletedEventHandler authorizeCompleted;

        /// <remarks/>
        public event setAttributesCompletedEventHandler setAttributesCompleted;

        /// <remarks/>
        public event setPersonalAttributesCompletedEventHandler setPersonalAttributesCompleted;

        /// <remarks/>
        public event isTokenValidCompletedEventHandler isTokenValidCompleted;

        /// <remarks/>
        public event getCookieNameForTokenCompletedEventHandler getCookieNameForTokenCompleted;

        /// <remarks/>
        public event getCookieNamesToForwardCompletedEventHandler getCookieNamesToForwardCompleted;

        /// <remarks/>
        public event searchCompletedEventHandler searchCompleted;

        /// <remarks/>
        public event searchUserDetailsCompletedEventHandler searchUserDetailsCompleted;

        /// <remarks/>
        public event createCompletedEventHandler createCompleted;

        /// <remarks/>
        public event readCompletedEventHandler readCompleted;

        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;

        /// <remarks/>
        public event deleteCompletedEventHandler deleteCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void log([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token app, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string logName, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string message)
        {
            this.Invoke("log", new object[] {
                    app,
                    subject,
                    logName,
                    message});
        }

        /// <remarks/>
        public System.IAsyncResult Beginlog(token app, token subject, string logName, string message, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("log", new object[] {
                    app,
                    subject,
                    logName,
                    message}, callback, asyncState);
        }

        /// <remarks/>
        public void Endlog(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void logAsync(token app, token subject, string logName, string message)
        {
            this.logAsync(app, subject, logName, message, null);
        }

        /// <remarks/>
        public void logAsync(token app, token subject, string logName, string message, object userState)
        {
            if ((this.logOperationCompleted == null))
            {
                this.logOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogOperationCompleted);
            }
            this.InvokeAsync("log", new object[] {
                    app,
                    subject,
                    logName,
                    message}, this.logOperationCompleted, userState);
        }

        private void OnlogOperationCompleted(object arg)
        {
            if ((this.logCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userDetails getAttributes([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute("attributeNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] attributeNames, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject)
        {
            object[] results = this.Invoke("getAttributes", new object[] {
                    appToken,
                    attributeNames,
                    subject});
            return ((userDetails)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetAttributes(token appToken, string[] attributeNames, token subject, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getAttributes", new object[] {
                    appToken,
                    attributeNames,
                    subject}, callback, asyncState);
        }

        /// <remarks/>
        public userDetails EndgetAttributes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((userDetails)(results[0]));
        }

        /// <remarks/>
        public void getAttributesAsync(token appToken, string[] attributeNames, token subject)
        {
            this.getAttributesAsync(appToken, attributeNames, subject, null);
        }

        /// <remarks/>
        public void getAttributesAsync(token appToken, string[] attributeNames, token subject, object userState)
        {
            if ((this.getAttributesOperationCompleted == null))
            {
                this.getAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAttributesOperationCompleted);
            }
            this.InvokeAsync("getAttributes", new object[] {
                    appToken,
                    attributeNames,
                    subject}, this.getAttributesOperationCompleted, userState);
        }

        private void OngetAttributesOperationCompleted(object arg)
        {
            if ((this.getAttributesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAttributesCompleted(this, new getAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personalDetails getPersonalAttributes([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute("applicationNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] applicationNames, [System.Xml.Serialization.XmlElementAttribute("attributeNames", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string[] attributeNames, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject)
        {
            object[] results = this.Invoke("getPersonalAttributes", new object[] {
                    appToken,
                    applicationNames,
                    attributeNames,
                    subject});
            return ((personalDetails)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetPersonalAttributes(token appToken, string[] applicationNames, string[] attributeNames, token subject, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getPersonalAttributes", new object[] {
                    appToken,
                    applicationNames,
                    attributeNames,
                    subject}, callback, asyncState);
        }

        /// <remarks/>
        public personalDetails EndgetPersonalAttributes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((personalDetails)(results[0]));
        }

        /// <remarks/>
        public void getPersonalAttributesAsync(token appToken, string[] applicationNames, string[] attributeNames, token subject)
        {
            this.getPersonalAttributesAsync(appToken, applicationNames, attributeNames, subject, null);
        }

        /// <remarks/>
        public void getPersonalAttributesAsync(token appToken, string[] applicationNames, string[] attributeNames, token subject, object userState)
        {
            if ((this.getPersonalAttributesOperationCompleted == null))
            {
                this.getPersonalAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonalAttributesOperationCompleted);
            }
            this.InvokeAsync("getPersonalAttributes", new object[] {
                    appToken,
                    applicationNames,
                    attributeNames,
                    subject}, this.getPersonalAttributesOperationCompleted, userState);
        }

        private void OngetPersonalAttributesOperationCompleted(object arg)
        {
            if ((this.getPersonalAttributesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonalAttributesCompleted(this, new getPersonalAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userDetails getUsernameAndEmail([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName)
        {
            object[] results = this.Invoke("getUsernameAndEmail", new object[] {
                    appToken,
                    userName});
            return ((userDetails)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetUsernameAndEmail(token appToken, string userName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getUsernameAndEmail", new object[] {
                    appToken,
                    userName}, callback, asyncState);
        }

        /// <remarks/>
        public userDetails EndgetUsernameAndEmail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((userDetails)(results[0]));
        }

        /// <remarks/>
        public void getUsernameAndEmailAsync(token appToken, string userName)
        {
            this.getUsernameAndEmailAsync(appToken, userName, null);
        }

        /// <remarks/>
        public void getUsernameAndEmailAsync(token appToken, string userName, object userState)
        {
            if ((this.getUsernameAndEmailOperationCompleted == null))
            {
                this.getUsernameAndEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUsernameAndEmailOperationCompleted);
            }
            this.InvokeAsync("getUsernameAndEmail", new object[] {
                    appToken,
                    userName}, this.getUsernameAndEmailOperationCompleted, userState);
        }

        private void OngetUsernameAndEmailOperationCompleted(object arg)
        {
            if ((this.getUsernameAndEmailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUsernameAndEmailCompleted(this, new getUsernameAndEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool addPolicy([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string policyXML)
        {
            object[] results = this.Invoke("addPolicy", new object[] {
                    appToken,
                    name,
                    policyXML});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginaddPolicy(token appToken, string name, string policyXML, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("addPolicy", new object[] {
                    appToken,
                    name,
                    policyXML}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndaddPolicy(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void addPolicyAsync(token appToken, string name, string policyXML)
        {
            this.addPolicyAsync(appToken, name, policyXML, null);
        }

        /// <remarks/>
        public void addPolicyAsync(token appToken, string name, string policyXML, object userState)
        {
            if ((this.addPolicyOperationCompleted == null))
            {
                this.addPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddPolicyOperationCompleted);
            }
            this.InvokeAsync("addPolicy", new object[] {
                    appToken,
                    name,
                    policyXML}, this.addPolicyOperationCompleted, userState);
        }

        private void OnaddPolicyOperationCompleted(object arg)
        {
            if ((this.addPolicyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addPolicyCompleted(this, new addPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deletePolicy([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            object[] results = this.Invoke("deletePolicy", new object[] {
                    appToken,
                    name});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeletePolicy(token appToken, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deletePolicy", new object[] {
                    appToken,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public bool EnddeletePolicy(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void deletePolicyAsync(token appToken, string name)
        {
            this.deletePolicyAsync(appToken, name, null);
        }

        /// <remarks/>
        public void deletePolicyAsync(token appToken, string name, object userState)
        {
            if ((this.deletePolicyOperationCompleted == null))
            {
                this.deletePolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePolicyOperationCompleted);
            }
            this.InvokeAsync("deletePolicy", new object[] {
                    appToken,
                    name}, this.deletePolicyOperationCompleted, userState);
        }

        private void OndeletePolicyOperationCompleted(object arg)
        {
            if ((this.deletePolicyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePolicyCompleted(this, new deletePolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getPolicy([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name)
        {
            object[] results = this.Invoke("getPolicy", new object[] {
                    appToken,
                    name});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetPolicy(token appToken, string name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getPolicy", new object[] {
                    appToken,
                    name}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetPolicy(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getPolicyAsync(token appToken, string name)
        {
            this.getPolicyAsync(appToken, name, null);
        }

        /// <remarks/>
        public void getPolicyAsync(token appToken, string name, object userState)
        {
            if ((this.getPolicyOperationCompleted == null))
            {
                this.getPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPolicyOperationCompleted);
            }
            this.InvokeAsync("getPolicy", new object[] {
                    appToken,
                    name}, this.getPolicyOperationCompleted, userState);
        }

        private void OngetPolicyOperationCompleted(object arg)
        {
            if ((this.getPolicyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPolicyCompleted(this, new getPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] listPolicyNames([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filter)
        {
            object[] results = this.Invoke("listPolicyNames", new object[] {
                    appToken,
                    filter});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginlistPolicyNames(token appToken, string filter, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("listPolicyNames", new object[] {
                    appToken,
                    filter}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndlistPolicyNames(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void listPolicyNamesAsync(token appToken, string filter)
        {
            this.listPolicyNamesAsync(appToken, filter, null);
        }

        /// <remarks/>
        public void listPolicyNamesAsync(token appToken, string filter, object userState)
        {
            if ((this.listPolicyNamesOperationCompleted == null))
            {
                this.listPolicyNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistPolicyNamesOperationCompleted);
            }
            this.InvokeAsync("listPolicyNames", new object[] {
                    appToken,
                    filter}, this.listPolicyNamesOperationCompleted, userState);
        }

        private void OnlistPolicyNamesOperationCompleted(object arg)
        {
            if ((this.listPolicyNamesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listPolicyNamesCompleted(this, new listPolicyNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] getRequiredAttributes([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string uri, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string action, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject)
        {
            object[] results = this.Invoke("getRequiredAttributes", new object[] {
                    appToken,
                    uri,
                    action,
                    subject});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetRequiredAttributes(token appToken, string uri, string action, token subject, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getRequiredAttributes", new object[] {
                    appToken,
                    uri,
                    action,
                    subject}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndgetRequiredAttributes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getRequiredAttributesAsync(token appToken, string uri, string action, token subject)
        {
            this.getRequiredAttributesAsync(appToken, uri, action, subject, null);
        }

        /// <remarks/>
        public void getRequiredAttributesAsync(token appToken, string uri, string action, token subject, object userState)
        {
            if ((this.getRequiredAttributesOperationCompleted == null))
            {
                this.getRequiredAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRequiredAttributesOperationCompleted);
            }
            this.InvokeAsync("getRequiredAttributes", new object[] {
                    appToken,
                    uri,
                    action,
                    subject}, this.getRequiredAttributesOperationCompleted, userState);
        }

        private void OngetRequiredAttributesOperationCompleted(object arg)
        {
            if ((this.getRequiredAttributesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRequiredAttributesCompleted(this, new getRequiredAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public token authenticate([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string password, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string uri)
        {
            object[] results = this.Invoke("authenticate", new object[] {
                    appToken,
                    username,
                    password,
                    uri});
            return ((token)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginauthenticate(token appToken, string username, string password, string uri, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("authenticate", new object[] {
                    appToken,
                    username,
                    password,
                    uri}, callback, asyncState);
        }

        /// <remarks/>
        public token Endauthenticate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((token)(results[0]));
        }

        /// <remarks/>
        public void authenticateAsync(token appToken, string username, string password, string uri)
        {
            this.authenticateAsync(appToken, username, password, uri, null);
        }

        /// <remarks/>
        public void authenticateAsync(token appToken, string username, string password, string uri, object userState)
        {
            if ((this.authenticateOperationCompleted == null))
            {
                this.authenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateOperationCompleted);
            }
            this.InvokeAsync("authenticate", new object[] {
                    appToken,
                    username,
                    password,
                    uri}, this.authenticateOperationCompleted, userState);
        }

        private void OnauthenticateOperationCompleted(object arg)
        {
            if ((this.authenticateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateCompleted(this, new authenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public token authenticateWithAttributes([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)] attribute[] attributes)
        {
            object[] results = this.Invoke("authenticateWithAttributes", new object[] {
                    appToken,
                    attributes});
            return ((token)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginauthenticateWithAttributes(token appToken, attribute[] attributes, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("authenticateWithAttributes", new object[] {
                    appToken,
                    attributes}, callback, asyncState);
        }

        /// <remarks/>
        public token EndauthenticateWithAttributes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((token)(results[0]));
        }

        /// <remarks/>
        public void authenticateWithAttributesAsync(token appToken, attribute[] attributes)
        {
            this.authenticateWithAttributesAsync(appToken, attributes, null);
        }

        /// <remarks/>
        public void authenticateWithAttributesAsync(token appToken, attribute[] attributes, object userState)
        {
            if ((this.authenticateWithAttributesOperationCompleted == null))
            {
                this.authenticateWithAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateWithAttributesOperationCompleted);
            }
            this.InvokeAsync("authenticateWithAttributes", new object[] {
                    appToken,
                    attributes}, this.authenticateWithAttributesOperationCompleted, userState);
        }

        private void OnauthenticateWithAttributesOperationCompleted(object arg)
        {
            if ((this.authenticateWithAttributesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateWithAttributesCompleted(this, new authenticateWithAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool resetPassword([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string username, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string password)
        {
            object[] results = this.Invoke("resetPassword", new object[] {
                    appToken,
                    username,
                    password});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginresetPassword(token appToken, string username, string password, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("resetPassword", new object[] {
                    appToken,
                    username,
                    password}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndresetPassword(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void resetPasswordAsync(token appToken, string username, string password)
        {
            this.resetPasswordAsync(appToken, username, password, null);
        }

        /// <remarks/>
        public void resetPasswordAsync(token appToken, string username, string password, object userState)
        {
            if ((this.resetPasswordOperationCompleted == null))
            {
                this.resetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresetPasswordOperationCompleted);
            }
            this.InvokeAsync("resetPassword", new object[] {
                    appToken,
                    username,
                    password}, this.resetPasswordOperationCompleted, userState);
        }

        private void OnresetPasswordOperationCompleted(object arg)
        {
            if ((this.resetPasswordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resetPasswordCompleted(this, new resetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool deleteUser([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string hardDelete)
        {
            object[] results = this.Invoke("deleteUser", new object[] {
                    appToken,
                    subject,
                    hardDelete});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegindeleteUser(token appToken, token subject, string hardDelete, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("deleteUser", new object[] {
                    appToken,
                    subject,
                    hardDelete}, callback, asyncState);
        }

        /// <remarks/>
        public bool EnddeleteUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void deleteUserAsync(token appToken, token subject, string hardDelete)
        {
            this.deleteUserAsync(appToken, subject, hardDelete, null);
        }

        /// <remarks/>
        public void deleteUserAsync(token appToken, token subject, string hardDelete, object userState)
        {
            if ((this.deleteUserOperationCompleted == null))
            {
                this.deleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteUserOperationCompleted);
            }
            this.InvokeAsync("deleteUser", new object[] {
                    appToken,
                    subject,
                    hardDelete}, this.deleteUserOperationCompleted, userState);
        }

        private void OndeleteUserOperationCompleted(object arg)
        {
            if ((this.deleteUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteUserCompleted(this, new deleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool exists([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)] attribute[] attributes)
        {
            object[] results = this.Invoke("exists", new object[] {
                    appToken,
                    attributes});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginexists(token appToken, attribute[] attributes, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("exists", new object[] {
                    appToken,
                    attributes}, callback, asyncState);
        }

        /// <remarks/>
        public bool Endexists(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void existsAsync(token appToken, attribute[] attributes)
        {
            this.existsAsync(appToken, attributes, null);
        }

        /// <remarks/>
        public void existsAsync(token appToken, attribute[] attributes, object userState)
        {
            if ((this.existsOperationCompleted == null))
            {
                this.existsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexistsOperationCompleted);
            }
            this.InvokeAsync("exists", new object[] {
                    appToken,
                    attributes}, this.existsOperationCompleted, userState);
        }

        private void OnexistsOperationCompleted(object arg)
        {
            if ((this.existsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.existsCompleted(this, new existsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public token register([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)] attribute[] attributes, [System.Xml.Serialization.XmlElementAttribute("personalattributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)] personalAttribute[] personalattributes, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string uri)
        {
            object[] results = this.Invoke("register", new object[] {
                    appToken,
                    attributes,
                    personalattributes,
                    uri});
            return ((token)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginregister(token appToken, attribute[] attributes, personalAttribute[] personalattributes, string uri, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("register", new object[] {
                    appToken,
                    attributes,
                    personalattributes,
                    uri}, callback, asyncState);
        }

        /// <remarks/>
        public token Endregister(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((token)(results[0]));
        }

        /// <remarks/>
        public void registerAsync(token appToken, attribute[] attributes, personalAttribute[] personalattributes, string uri)
        {
            this.registerAsync(appToken, attributes, personalattributes, uri, null);
        }

        /// <remarks/>
        public void registerAsync(token appToken, attribute[] attributes, personalAttribute[] personalattributes, string uri, object userState)
        {
            if ((this.registerOperationCompleted == null))
            {
                this.registerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregisterOperationCompleted);
            }
            this.InvokeAsync("register", new object[] {
                    appToken,
                    attributes,
                    personalattributes,
                    uri}, this.registerOperationCompleted, userState);
        }

        private void OnregisterOperationCompleted(object arg)
        {
            if ((this.registerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registerCompleted(this, new registerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool validLegacyCookie([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string cookie, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string uri)
        {
            object[] results = this.Invoke("validLegacyCookie", new object[] {
                    appToken,
                    cookie,
                    uri});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginvalidLegacyCookie(token appToken, string cookie, string uri, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("validLegacyCookie", new object[] {
                    appToken,
                    cookie,
                    uri}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndvalidLegacyCookie(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void validLegacyCookieAsync(token appToken, string cookie, string uri)
        {
            this.validLegacyCookieAsync(appToken, cookie, uri, null);
        }

        /// <remarks/>
        public void validLegacyCookieAsync(token appToken, string cookie, string uri, object userState)
        {
            if ((this.validLegacyCookieOperationCompleted == null))
            {
                this.validLegacyCookieOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidLegacyCookieOperationCompleted);
            }
            this.InvokeAsync("validLegacyCookie", new object[] {
                    appToken,
                    cookie,
                    uri}, this.validLegacyCookieOperationCompleted, userState);
        }

        private void OnvalidLegacyCookieOperationCompleted(object arg)
        {
            if ((this.validLegacyCookieCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validLegacyCookieCompleted(this, new validLegacyCookieCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getCookieValue([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string cookieDomain, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string sessionId)
        {
            object[] results = this.Invoke("getCookieValue", new object[] {
                    appToken,
                    subject,
                    cookieDomain,
                    sessionId});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetCookieValue(token appToken, token subject, string cookieDomain, string sessionId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getCookieValue", new object[] {
                    appToken,
                    subject,
                    cookieDomain,
                    sessionId}, callback, asyncState);
        }

        /// <remarks/>
        public string EndgetCookieValue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getCookieValueAsync(token appToken, token subject, string cookieDomain, string sessionId)
        {
            this.getCookieValueAsync(appToken, subject, cookieDomain, sessionId, null);
        }

        /// <remarks/>
        public void getCookieValueAsync(token appToken, token subject, string cookieDomain, string sessionId, object userState)
        {
            if ((this.getCookieValueOperationCompleted == null))
            {
                this.getCookieValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCookieValueOperationCompleted);
            }
            this.InvokeAsync("getCookieValue", new object[] {
                    appToken,
                    subject,
                    cookieDomain,
                    sessionId}, this.getCookieValueOperationCompleted, userState);
        }

        private void OngetCookieValueOperationCompleted(object arg)
        {
            if ((this.getCookieValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCookieValueCompleted(this, new getCookieValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public token authenticateCookieValue([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string cookieValue)
        {
            object[] results = this.Invoke("authenticateCookieValue", new object[] {
                    appToken,
                    cookieValue});
            return ((token)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginauthenticateCookieValue(token appToken, string cookieValue, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("authenticateCookieValue", new object[] {
                    appToken,
                    cookieValue}, callback, asyncState);
        }

        /// <remarks/>
        public token EndauthenticateCookieValue(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((token)(results[0]));
        }

        /// <remarks/>
        public void authenticateCookieValueAsync(token appToken, string cookieValue)
        {
            this.authenticateCookieValueAsync(appToken, cookieValue, null);
        }

        /// <remarks/>
        public void authenticateCookieValueAsync(token appToken, string cookieValue, object userState)
        {
            if ((this.authenticateCookieValueOperationCompleted == null))
            {
                this.authenticateCookieValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateCookieValueOperationCompleted);
            }
            this.InvokeAsync("authenticateCookieValue", new object[] {
                    appToken,
                    cookieValue}, this.authenticateCookieValueOperationCompleted, userState);
        }

        private void OnauthenticateCookieValueOperationCompleted(object arg)
        {
            if ((this.authenticateCookieValueCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateCookieValueCompleted(this, new authenticateCookieValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public token authenticateToken([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject)
        {
            object[] results = this.Invoke("authenticateToken", new object[] {
                    appToken,
                    subject});
            return ((token)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginauthenticateToken(token appToken, token subject, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("authenticateToken", new object[] {
                    appToken,
                    subject}, callback, asyncState);
        }

        /// <remarks/>
        public token EndauthenticateToken(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((token)(results[0]));
        }

        /// <remarks/>
        public void authenticateTokenAsync(token appToken, token subject)
        {
            this.authenticateTokenAsync(appToken, subject, null);
        }

        /// <remarks/>
        public void authenticateTokenAsync(token appToken, token subject, object userState)
        {
            if ((this.authenticateTokenOperationCompleted == null))
            {
                this.authenticateTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthenticateTokenOperationCompleted);
            }
            this.InvokeAsync("authenticateToken", new object[] {
                    appToken,
                    subject}, this.authenticateTokenOperationCompleted, userState);
        }

        private void OnauthenticateTokenOperationCompleted(object arg)
        {
            if ((this.authenticateTokenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authenticateTokenCompleted(this, new authenticateTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool logout([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject)
        {
            object[] results = this.Invoke("logout", new object[] {
                    appToken,
                    subject});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginlogout(token appToken, token subject, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("logout", new object[] {
                    appToken,
                    subject}, callback, asyncState);
        }

        /// <remarks/>
        public bool Endlogout(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void logoutAsync(token appToken, token subject)
        {
            this.logoutAsync(appToken, subject, null);
        }

        /// <remarks/>
        public void logoutAsync(token appToken, token subject, object userState)
        {
            if ((this.logoutOperationCompleted == null))
            {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                    appToken,
                    subject}, this.logoutOperationCompleted, userState);
        }

        private void OnlogoutOperationCompleted(object arg)
        {
            if ((this.logoutCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool authorize([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string uri, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string action, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject)
        {
            object[] results = this.Invoke("authorize", new object[] {
                    appToken,
                    uri,
                    action,
                    subject});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginauthorize(token appToken, string uri, string action, token subject, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("authorize", new object[] {
                    appToken,
                    uri,
                    action,
                    subject}, callback, asyncState);
        }

        /// <remarks/>
        public bool Endauthorize(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void authorizeAsync(token appToken, string uri, string action, token subject)
        {
            this.authorizeAsync(appToken, uri, action, subject, null);
        }

        /// <remarks/>
        public void authorizeAsync(token appToken, string uri, string action, token subject, object userState)
        {
            if ((this.authorizeOperationCompleted == null))
            {
                this.authorizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnauthorizeOperationCompleted);
            }
            this.InvokeAsync("authorize", new object[] {
                    appToken,
                    uri,
                    action,
                    subject}, this.authorizeOperationCompleted, userState);
        }

        private void OnauthorizeOperationCompleted(object arg)
        {
            if ((this.authorizeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.authorizeCompleted(this, new authorizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public userDetails setAttributes([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)] attribute[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string uri, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string action, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject)
        {
            object[] results = this.Invoke("setAttributes", new object[] {
                    appToken,
                    attributes,
                    uri,
                    action,
                    subject});
            return ((userDetails)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsetAttributes(token appToken, attribute[] attributes, string uri, string action, token subject, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("setAttributes", new object[] {
                    appToken,
                    attributes,
                    uri,
                    action,
                    subject}, callback, asyncState);
        }

        /// <remarks/>
        public userDetails EndsetAttributes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((userDetails)(results[0]));
        }

        /// <remarks/>
        public void setAttributesAsync(token appToken, attribute[] attributes, string uri, string action, token subject)
        {
            this.setAttributesAsync(appToken, attributes, uri, action, subject, null);
        }

        /// <remarks/>
        public void setAttributesAsync(token appToken, attribute[] attributes, string uri, string action, token subject, object userState)
        {
            if ((this.setAttributesOperationCompleted == null))
            {
                this.setAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetAttributesOperationCompleted);
            }
            this.InvokeAsync("setAttributes", new object[] {
                    appToken,
                    attributes,
                    uri,
                    action,
                    subject}, this.setAttributesOperationCompleted, userState);
        }

        private void OnsetAttributesOperationCompleted(object arg)
        {
            if ((this.setAttributesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setAttributesCompleted(this, new setAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public personalDetails setPersonalAttributes([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token appToken, [System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)] attribute[] attributes, [System.Xml.Serialization.XmlElementAttribute("personalAttributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)] personalAttribute[] personalAttributes, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string uri, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token subject)
        {
            object[] results = this.Invoke("setPersonalAttributes", new object[] {
                    appToken,
                    attributes,
                    personalAttributes,
                    uri,
                    subject});
            return ((personalDetails)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsetPersonalAttributes(token appToken, attribute[] attributes, personalAttribute[] personalAttributes, string uri, token subject, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("setPersonalAttributes", new object[] {
                    appToken,
                    attributes,
                    personalAttributes,
                    uri,
                    subject}, callback, asyncState);
        }

        /// <remarks/>
        public personalDetails EndsetPersonalAttributes(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((personalDetails)(results[0]));
        }

        /// <remarks/>
        public void setPersonalAttributesAsync(token appToken, attribute[] attributes, personalAttribute[] personalAttributes, string uri, token subject)
        {
            this.setPersonalAttributesAsync(appToken, attributes, personalAttributes, uri, subject, null);
        }

        /// <remarks/>
        public void setPersonalAttributesAsync(token appToken, attribute[] attributes, personalAttribute[] personalAttributes, string uri, token subject, object userState)
        {
            if ((this.setPersonalAttributesOperationCompleted == null))
            {
                this.setPersonalAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPersonalAttributesOperationCompleted);
            }
            this.InvokeAsync("setPersonalAttributes", new object[] {
                    appToken,
                    attributes,
                    personalAttributes,
                    uri,
                    subject}, this.setPersonalAttributesOperationCompleted, userState);
        }

        private void OnsetPersonalAttributesOperationCompleted(object arg)
        {
            if ((this.setPersonalAttributesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPersonalAttributesCompleted(this, new setPersonalAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool isTokenValid([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token token)
        {
            object[] results = this.Invoke("isTokenValid", new object[] {
                    token});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginisTokenValid(token token, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("isTokenValid", new object[] {
                    token}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndisTokenValid(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void isTokenValidAsync(token token)
        {
            this.isTokenValidAsync(token, null);
        }

        /// <remarks/>
        public void isTokenValidAsync(token token, object userState)
        {
            if ((this.isTokenValidOperationCompleted == null))
            {
                this.isTokenValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisTokenValidOperationCompleted);
            }
            this.InvokeAsync("isTokenValid", new object[] {
                    token}, this.isTokenValidOperationCompleted, userState);
        }

        private void OnisTokenValidOperationCompleted(object arg)
        {
            if ((this.isTokenValidCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isTokenValidCompleted(this, new isTokenValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getCookieNameForToken()
        {
            object[] results = this.Invoke("getCookieNameForToken", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetCookieNameForToken(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getCookieNameForToken", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndgetCookieNameForToken(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void getCookieNameForTokenAsync()
        {
            this.getCookieNameForTokenAsync(null);
        }

        /// <remarks/>
        public void getCookieNameForTokenAsync(object userState)
        {
            if ((this.getCookieNameForTokenOperationCompleted == null))
            {
                this.getCookieNameForTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCookieNameForTokenOperationCompleted);
            }
            this.InvokeAsync("getCookieNameForToken", new object[0], this.getCookieNameForTokenOperationCompleted, userState);
        }

        private void OngetCookieNameForTokenOperationCompleted(object arg)
        {
            if ((this.getCookieNameForTokenCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCookieNameForTokenCompleted(this, new getCookieNameForTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] getCookieNamesToForward()
        {
            object[] results = this.Invoke("getCookieNamesToForward", new object[0]);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BegingetCookieNamesToForward(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("getCookieNamesToForward", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string[] EndgetCookieNamesToForward(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void getCookieNamesToForwardAsync()
        {
            this.getCookieNamesToForwardAsync(null);
        }

        /// <remarks/>
        public void getCookieNamesToForwardAsync(object userState)
        {
            if ((this.getCookieNamesToForwardOperationCompleted == null))
            {
                this.getCookieNamesToForwardOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCookieNamesToForwardOperationCompleted);
            }
            this.InvokeAsync("getCookieNamesToForward", new object[0], this.getCookieNamesToForwardOperationCompleted, userState);
        }

        private void OngetCookieNamesToForwardOperationCompleted(object arg)
        {
            if ((this.getCookieNamesToForwardCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCookieNamesToForwardCompleted(this, new getCookieNamesToForwardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] search([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string filter, [System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] attribute[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token admin)
        {
            object[] results = this.Invoke("search", new object[] {
                    filter,
                    attributes,
                    admin});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginsearch(string filter, attribute[] attributes, token admin, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("search", new object[] {
                    filter,
                    attributes,
                    admin}, callback, asyncState);
        }

        /// <remarks/>
        public string[] Endsearch(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void searchAsync(string filter, attribute[] attributes, token admin)
        {
            this.searchAsync(filter, attributes, admin, null);
        }

        /// <remarks/>
        public void searchAsync(string filter, attribute[] attributes, token admin, object userState)
        {
            if ((this.searchOperationCompleted == null))
            {
                this.searchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchOperationCompleted);
            }
            this.InvokeAsync("search", new object[] {
                    filter,
                    attributes,
                    admin}, this.searchOperationCompleted, userState);
        }

        private void OnsearchOperationCompleted(object arg)
        {
            if ((this.searchCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchCompleted(this, new searchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identityDetails[] searchUserDetails([System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)] attribute[] attributes, [System.Xml.Serialization.XmlElementAttribute("attributesToExpose", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)] string[] attributesToExpose, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string exactMatchOnly, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string startPage, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string endPage)
        {
            object[] results = this.Invoke("searchUserDetails", new object[] {
                    attributes,
                    attributesToExpose,
                    exactMatchOnly,
                    startPage,
                    endPage});
            return ((identityDetails[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsearchUserDetails(attribute[] attributes, string[] attributesToExpose, string exactMatchOnly, string startPage, string endPage, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("searchUserDetails", new object[] {
                    attributes,
                    attributesToExpose,
                    exactMatchOnly,
                    startPage,
                    endPage}, callback, asyncState);
        }

        /// <remarks/>
        public identityDetails[] EndsearchUserDetails(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((identityDetails[])(results[0]));
        }

        /// <remarks/>
        public void searchUserDetailsAsync(attribute[] attributes, string[] attributesToExpose, string exactMatchOnly, string startPage, string endPage)
        {
            this.searchUserDetailsAsync(attributes, attributesToExpose, exactMatchOnly, startPage, endPage, null);
        }

        /// <remarks/>
        public void searchUserDetailsAsync(attribute[] attributes, string[] attributesToExpose, string exactMatchOnly, string startPage, string endPage, object userState)
        {
            if ((this.searchUserDetailsOperationCompleted == null))
            {
                this.searchUserDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchUserDetailsOperationCompleted);
            }
            this.InvokeAsync("searchUserDetails", new object[] {
                    attributes,
                    attributesToExpose,
                    exactMatchOnly,
                    startPage,
                    endPage}, this.searchUserDetailsOperationCompleted, userState);
        }

        private void OnsearchUserDetailsOperationCompleted(object arg)
        {
            if ((this.searchUserDetailsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchUserDetailsCompleted(this, new searchUserDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void create([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] identityDetails identity, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token admin)
        {
            this.Invoke("create", new object[] {
                    identity,
                    admin});
        }

        /// <remarks/>
        public System.IAsyncResult Begincreate(identityDetails identity, token admin, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("create", new object[] {
                    identity,
                    admin}, callback, asyncState);
        }

        /// <remarks/>
        public void Endcreate(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void createAsync(identityDetails identity, token admin)
        {
            this.createAsync(identity, admin, null);
        }

        /// <remarks/>
        public void createAsync(identityDetails identity, token admin, object userState)
        {
            if ((this.createOperationCompleted == null))
            {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                    identity,
                    admin}, this.createOperationCompleted, userState);
        }

        private void OncreateOperationCompleted(object arg)
        {
            if ((this.createCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public identityDetails read([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] attribute[] attributes, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token admin)
        {
            object[] results = this.Invoke("read", new object[] {
                    name,
                    attributes,
                    admin});
            return ((identityDetails)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult Beginread(string name, attribute[] attributes, token admin, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("read", new object[] {
                    name,
                    attributes,
                    admin}, callback, asyncState);
        }

        /// <remarks/>
        public identityDetails Endread(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((identityDetails)(results[0]));
        }

        /// <remarks/>
        public void readAsync(string name, attribute[] attributes, token admin)
        {
            this.readAsync(name, attributes, admin, null);
        }

        /// <remarks/>
        public void readAsync(string name, attribute[] attributes, token admin, object userState)
        {
            if ((this.readOperationCompleted == null))
            {
                this.readOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreadOperationCompleted);
            }
            this.InvokeAsync("read", new object[] {
                    name,
                    attributes,
                    admin}, this.readOperationCompleted, userState);
        }

        private void OnreadOperationCompleted(object arg)
        {
            if ((this.readCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.readCompleted(this, new readCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void update([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] identityDetails identity, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token admin)
        {
            this.Invoke("update", new object[] {
                    identity,
                    admin});
        }

        /// <remarks/>
        public System.IAsyncResult Beginupdate(identityDetails identity, token admin, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("update", new object[] {
                    identity,
                    admin}, callback, asyncState);
        }

        /// <remarks/>
        public void Endupdate(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void updateAsync(identityDetails identity, token admin)
        {
            this.updateAsync(identity, admin, null);
        }

        /// <remarks/>
        public void updateAsync(identityDetails identity, token admin, object userState)
        {
            if ((this.updateOperationCompleted == null))
            {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                    identity,
                    admin}, this.updateOperationCompleted, userState);
        }

        private void OnupdateOperationCompleted(object arg)
        {
            if ((this.updateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "http://opensso.idsvcs.identity.sun.com/", ResponseNamespace = "http://opensso.idsvcs.identity.sun.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void delete([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] identityDetails identity, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] token admin)
        {
            this.Invoke("delete", new object[] {
                    identity,
                    admin});
        }

        /// <remarks/>
        public System.IAsyncResult Begindelete(identityDetails identity, token admin, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("delete", new object[] {
                    identity,
                    admin}, callback, asyncState);
        }

        /// <remarks/>
        public void Enddelete(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void deleteAsync(identityDetails identity, token admin)
        {
            this.deleteAsync(identity, admin, null);
        }

        /// <remarks/>
        public void deleteAsync(identityDetails identity, token admin, object userState)
        {
            if ((this.deleteOperationCompleted == null))
            {
                this.deleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOperationCompleted);
            }
            this.InvokeAsync("delete", new object[] {
                    identity,
                    admin}, this.deleteOperationCompleted, userState);
        }

        private void OndeleteOperationCompleted(object arg)
        {
            if ((this.deleteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://opensso.idsvcs.identity.sun.com/")]
    public partial class token
    {

        private string idField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://opensso.idsvcs.identity.sun.com/")]
    public partial class identityDetails
    {

        private string nameField;

        private string typeField;

        private string realmField;

        private string[] rolesField;

        private string[] groupsField;

        private string[] membersField;

        private attribute[] attributesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string realm
        {
            get
            {
                return this.realmField;
            }
            set
            {
                this.realmField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("roles", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] roles
        {
            get
            {
                return this.rolesField;
            }
            set
            {
                this.rolesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("groups", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] groups
        {
            get
            {
                return this.groupsField;
            }
            set
            {
                this.groupsField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("members", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] members
        {
            get
            {
                return this.membersField;
            }
            set
            {
                this.membersField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public attribute[] attributes
        {
            get
            {
                return this.attributesField;
            }
            set
            {
                this.attributesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://opensso.idsvcs.identity.sun.com/")]
    public partial class attribute
    {

        private string nameField;

        private string[] valuesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] values
        {
            get
            {
                return this.valuesField;
            }
            set
            {
                this.valuesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://opensso.idsvcs.identity.sun.com/")]
    public partial class personalAttribute
    {

        private string applicationField;

        private string nameField;

        private string[] valuesField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string application
        {
            get
            {
                return this.applicationField;
            }
            set
            {
                this.applicationField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("values", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] values
        {
            get
            {
                return this.valuesField;
            }
            set
            {
                this.valuesField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://opensso.idsvcs.identity.sun.com/")]
    public partial class personalDetails
    {

        private personalAttribute[] personalAttributesField;

        private token tokenField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("personalAttributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public personalAttribute[] personalAttributes
        {
            get
            {
                return this.personalAttributesField;
            }
            set
            {
                this.personalAttributesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public token token
        {
            get
            {
                return this.tokenField;
            }
            set
            {
                this.tokenField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://opensso.idsvcs.identity.sun.com/")]
    public partial class userDetails
    {

        private attribute[] attributesField;

        private string[] rolesField;

        private token tokenField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("attributes", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public attribute[] attributes
        {
            get
            {
                return this.attributesField;
            }
            set
            {
                this.attributesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("roles", Form = System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable = true)]
        public string[] roles
        {
            get
            {
                return this.rolesField;
            }
            set
            {
                this.rolesField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public token token
        {
            get
            {
                return this.tokenField;
            }
            set
            {
                this.tokenField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void logCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getAttributesCompletedEventHandler(object sender, getAttributesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public userDetails Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((userDetails)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getPersonalAttributesCompletedEventHandler(object sender, getPersonalAttributesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPersonalAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPersonalAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public personalDetails Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((personalDetails)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getUsernameAndEmailCompletedEventHandler(object sender, getUsernameAndEmailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUsernameAndEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getUsernameAndEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public userDetails Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((userDetails)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void addPolicyCompletedEventHandler(object sender, addPolicyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal addPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deletePolicyCompletedEventHandler(object sender, deletePolicyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deletePolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal deletePolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getPolicyCompletedEventHandler(object sender, getPolicyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void listPolicyNamesCompletedEventHandler(object sender, listPolicyNamesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listPolicyNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal listPolicyNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getRequiredAttributesCompletedEventHandler(object sender, getRequiredAttributesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRequiredAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getRequiredAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void authenticateCompletedEventHandler(object sender, authenticateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal authenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public token Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((token)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void authenticateWithAttributesCompletedEventHandler(object sender, authenticateWithAttributesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateWithAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal authenticateWithAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public token Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((token)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void resetPasswordCompletedEventHandler(object sender, resetPasswordCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal resetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteUserCompletedEventHandler(object sender, deleteUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal deleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void existsCompletedEventHandler(object sender, existsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class existsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal existsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void registerCompletedEventHandler(object sender, registerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal registerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public token Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((token)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void validLegacyCookieCompletedEventHandler(object sender, validLegacyCookieCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validLegacyCookieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal validLegacyCookieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getCookieValueCompletedEventHandler(object sender, getCookieValueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCookieValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCookieValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void authenticateCookieValueCompletedEventHandler(object sender, authenticateCookieValueCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateCookieValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal authenticateCookieValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public token Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((token)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void authenticateTokenCompletedEventHandler(object sender, authenticateTokenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authenticateTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal authenticateTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public token Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((token)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void authorizeCompletedEventHandler(object sender, authorizeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class authorizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal authorizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void setAttributesCompletedEventHandler(object sender, setAttributesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal setAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public userDetails Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((userDetails)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void setPersonalAttributesCompletedEventHandler(object sender, setPersonalAttributesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPersonalAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal setPersonalAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public personalDetails Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((personalDetails)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void isTokenValidCompletedEventHandler(object sender, isTokenValidCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isTokenValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal isTokenValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getCookieNameForTokenCompletedEventHandler(object sender, getCookieNameForTokenCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCookieNameForTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCookieNameForTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void getCookieNamesToForwardCompletedEventHandler(object sender, getCookieNamesToForwardCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCookieNamesToForwardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal getCookieNamesToForwardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void searchCompletedEventHandler(object sender, searchCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void searchUserDetailsCompletedEventHandler(object sender, searchUserDetailsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchUserDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal searchUserDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public identityDetails[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((identityDetails[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void createCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void readCompletedEventHandler(object sender, readCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class readCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal readCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public identityDetails Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((identityDetails)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void updateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void deleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}