create PROCEDURE fetchmoderationstatisticsperuserbytype @userid int
AS

declare @modgroupid int
SELECT @modgroupid = groupid from Groups WITH(NOLOCK) where name='Moderator'

declare @refereegroupid int
SELECT @refereegroupid = groupid from Groups WITH(NOLOCK) where name='Referee'

declare @hostgroupid int
select @hostgroupid = groupid from Groups WITH(NOLOCK) where name = 'Host'

declare @editorgroupid int
select @editorgroupid = groupid from Groups WITH(NOLOCK) where name = 'Editor'

declare @assetmodgroupid int
select @assetmodgroupid = groupid from Groups WITH(NOLOCK) where name = 'AssetModerator'

declare @issuperuser int
select @issuperuser = CASE WHEN Status = 2 then 1 ELSE 0 END FROM Users WITH(NOLOCK) where UserID = @userid


--forum-referrals-queued 
(
	SELECT 'forum', 
		'queuedreffered',
		count(*) as 'total',
		min(tm.datequeued),
		fastmod = ISNULL(fmf.forumid,0),
		mc.maxage - datediff(minute, min(tm.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') end  as 'SiteType'
    FROM (	--No primary key on group members - this sub-query causes a better plan
			--to be generated by SQL Server
            SELECT DISTINCT s.siteid,s.modclassid
			FROM Sites s WITH(NOLOCK)
			LEFT JOIN GroupMembers gm WITH(NOLOCK) on gm.siteid=s.siteid AND gm.UserID = @userid
			WHERE (@issuperuser = 1 OR gm.GroupID = @refereegroupid)
		) as s1
    INNER JOIN ThreadMod tm WITH(NOLOCK) on tm.SiteID = s1.SiteID AND tm.Status = 2 AND tm.NewPost = 1 
        and tm.LockedBy IS NULL and tm.ComplainantID IS NULL
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s1.modclassid
	LEFT JOIN FastModForums fmf WITH(NOLOCK) on fmf.ForumID = tm.ForumID
	GROUP BY  
		mc.maxage, 
		ISNULL(fmf.forumid,0),
		dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType')
)
UNION ALL
--forum-referrals-locked 
(
	SELECT 'forum', 
		'lockedreffered',
		count(*) as 'total', 
		min(tm.datequeued), 
		fastmod = ISNULL(fmf.ForumID,0),
		mc.maxage - datediff(minute, min(tm.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') end  as 'SiteType'
	FROM ThreadMod tm WITH(NOLOCK) 
    INNER JOIN Sites s WITH(NOLOCK) on s.SiteID = tm.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s.modclassid
	LEFT JOIN FastModForums fmf WITH(NOLOCK) on fmf.ForumID = tm.ForumID
	WHERE tm.Status = 2 AND tm.NewPost = 1 AND tm.LockedBy = @userid AND tm.ComplainantID IS NULL
	GROUP BY 
		mc.maxage,
        ISNULL(fmf.ForumID,0),
		dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType')
)
UNION ALL
--forum-complaints-referrals-queued 
(
	SELECT 'forumcomplaint',
		'queuedreffered',
		count(*) as 'total',
		min(tm.datequeued),
		fastmod = ISNULL(fmf.ForumID,0),
		mc.maxage - datediff(minute, min(tm.datequeued), getdate()),
		dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType')  as 'SiteType'
    FROM (  --No primary key on group members - this sub-query causes a better plan
			--to be generated by SQL Server
            SELECT DISTINCT s.siteid,s.modclassid
			FROM Sites s WITH(NOLOCK)
			LEFT JOIN GroupMembers gm WITH(NOLOCK) on gm.siteid=s.siteid AND gm.UserID = @userid
			WHERE (@issuperuser = 1 OR gm.GroupID = @refereegroupid  )
         ) as s1
	INNER JOIN ThreadMod tm WITH(NOLOCK) on tm.SiteID = s1.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s1.modclassid
    --INNER JOIN ( 
	--	SELECT tt.PostId, MIN(tt.datequeued) 'datequeued' from ThreadMod tt 
	--	WHERE tt.Status = 2 AND tt.LockedBy IS NULL AND tt.ComplainantID IS NOT NULL AND tt.NewPost = 1
	--	GROUP BY tt.PostId
	--) AS FirstComplaintOnly ON FirstComplaintOnly.PostId = tm.PostId AND FirstComplaintOnly.datequeued = tm.datequeued
	LEFT JOIN FastModForums fmf WITH(NOLOCK) on fmf.ForumID = tm.ForumID
	WHERE tm.Status = 2 AND tm.ComplainantID IS NOT NULL AND tm.LockedBy IS NULL 
	GROUP BY 
		mc.maxage,
		ISNULL(fmf.ForumID,0),
		dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType')
)
UNION ALL
--forum-complaints-referrals-locked 
(
	SELECT 'forumcomplaint',
		'lockedreffered',
		count(*) as 'total',
		min(tm.datequeued),
		fastmod = ISNULL(fmf.ForumID,0),
		mc.maxage - datediff(minute, min(tm.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') end  as 'SiteType'
	FROM ThreadMod tm WITH(NOLOCK)
    INNER JOIN Sites s WITH(NOLOCK) on s.SiteID = tm.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s.modclassid
	LEFT JOIN FastModForums fmf WITH(NOLOCK) on fmf.ForumID = tm.ForumID
	WHERE tm.Status = 2 AND tm.ComplainantID IS NOT NULL AND tm.LockedBy = @userid 
	group by  
		mc.maxage, 
		ISNULL(fmf.ForumID,0),
		dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType')
)
UNION ALL
--entries-referrals-queued 
(
	SELECT 'entry',
		'queuedreffered',
		count(*) as 'total',
		min(a.datequeued),
		0,
		mc.maxage - datediff(minute, min(a.datequeued),	getdate()),
		dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType')  as 'SiteType'
	FROM (	--No primary key on group members - this sub-query causes a better plan
			--to be generated by SQL Server
			SELECT DISTINCT s.siteid,s.modclassid
			FROM Sites s WITH(NOLOCK)
			LEFT JOIN GroupMembers gm WITH(NOLOCK) on gm.siteid=s.siteid AND gm.UserID = @userid
			WHERE (@issuperuser = 1 OR gm.GroupID = @refereegroupid )
		) as s1
	INNER JOIN ArticleMod a WITH(NOLOCK) on a.SiteID = s1.SiteID
	INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s1.modclassid
	WHERE a.Status = 2 AND a.NewArticle = 1 AND a.LockedBy IS NULL AND a.ComplainantID IS NULL
	GROUP BY 
	    mc.maxage,
		dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType')

)
UNION ALL
--entries-referrals-locked 
(
	SELECT 'entry', 
		'lockedreffered',
		count(*) as 'total', 
		min(am.datequeued), 
		0,
		mc.maxage - datediff(minute, min(am.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') end  as 'SiteType'
	FROM ArticleMod am WITH(NOLOCK)
    INNER JOIN Sites s WITH(NOLOCK) on s.SiteID = am.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s.modclassid
	WHERE am.Status = 2 AND am.NewArticle = 1 AND am.LockedBy = @userid AND am.ComplainantID IS NULL
	group by  
		mc.maxage,
		dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType')
)
UNION ALL
--entries-complaints-referrals-queued 
(
	SELECT 'entrycomplaint',
		'queuedreffered',
		count(*) as 'total',
		min(a.datequeued),
		0,
		mc.maxage - datediff(minute, min(a.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') end  as 'SiteType'
    FROM (  --No primary key on group members - this sub-query causes a better plan
			--to be generated by SQL Server
            SELECT DISTINCT s.siteid,s.modclassid
			FROM Sites s WITH(NOLOCK)
			LEFT JOIN GroupMembers gm WITH(NOLOCK) on gm.siteid=s.siteid AND gm.UserID = @userid
			WHERE (@issuperuser = 1 OR gm.GroupID = @refereegroupid )
         ) as s1
	INNER JOIN ArticleMod a WITH(NOLOCK) on a.SiteID = s1.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s1.modclassid
	WHERE a.Status = 2 AND a.ComplainantID IS NOT NULL AND a.LockedBy IS NULL
	
	GROUP BY 
		mc.maxage, 
		dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType')
)
UNION ALL
--entries-complaints-referrals-locked 
(
	SELECT 'entrycomplaint', 
		'lockedreffered',
		count(*) as 'total',
		min(am.datequeued),
		0,
		mc.maxage - datediff(minute, min(am.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') end  as 'SiteType'
	FROM ArticleMod am WITH(NOLOCK)
    INNER JOIN Sites s WITH(NOLOCK) on s.SiteID = am.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s.modclassid
	WHERE am.Status = 2 AND am.ComplainantID IS NOT NULL AND am.LockedBy = @userid
	group by 
	    mc.maxage,  
		dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType')
)
UNION ALL
--general-complaints-referrals-queued 
(
	SELECT 'generalcomplaint',
		'queuedreffered',
		count(*) as 'total', 
		min(g.datequeued), 
		0,
		mc.maxage - datediff(minute, min(g.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') end  as 'SiteType'
    FROM (  --No primary key on group members - this sub-query causes a better plan
			--to be generated by SQL Server
            SELECT DISTINCT s.siteid,s.modclassid
			FROM Sites s WITH(NOLOCK)
			LEFT JOIN GroupMembers gm WITH(NOLOCK) on gm.siteid=s.siteid AND gm.UserID = @userid
			WHERE (@issuperuser = 1 OR gm.GroupID = @refereegroupid)
        ) as s1
	INNER JOIN GeneralMod g WITH(NOLOCK) on g.SiteID = s1.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s1.modclassid
	WHERE g.status = 2 AND g.LockedBy IS NULL
	GROUP BY 
		mc.maxage,
		dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType')

)
UNION ALL
--general-complaints-referrals-locked 
(
	SELECT 'generalcomplaint',
		'lockedreffered',
		count(*) as 'total',
		min(gm.datequeued),
		0,
		mc.maxage - datediff(minute, min(gm.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') end  as 'SiteType'
	FROM GeneralMod gm WITH(NOLOCK)
    INNER JOIN Sites s WITH(NOLOCK) on s.SiteID = gm.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s.modclassid
	WHERE gm.status = 2 AND gm.LockedBy = @userid
	group by 
		mc.maxage, 
		dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType')
)

UNION ALL
(
	SELECT 'exlink', 
		'queuedreffered',
		count(*) as 'total',
		min(ex.datequeued) mindatequeued,
		fastmod = 0,
		mc.maxage - datediff(minute, min(ex.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') end  as 'SiteType'
    FROM (	--No primary key on group members - this sub-query causes a better plan
			--to be generated by SQL Server
            SELECT DISTINCT s.siteid,s.modclassid
			FROM Sites s WITH(NOLOCK)
			LEFT JOIN GroupMembers gm WITH(NOLOCK) on gm.siteid=s.siteid AND gm.UserID = @userid
			WHERE (@issuperuser = 1 OR gm.GroupID = @refereegroupid)
		) as s1
    INNER JOIN ExLinkMod ex WITH(NOLOCK) on ex.SiteID = s1.SiteID AND ex.Status = 2
        and ex.LockedBy IS NULL and ex.complainttext IS NULL
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s1.modclassid
	GROUP BY  mc.maxage,
		dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType')
		
)
UNION ALL
(
	SELECT 'exlink', 
		'lockedreffered',
		count(*) as 'total', 
		min(ex.datequeued), 
		fastmod = 0,
		mc.maxage - datediff(minute, min(ex.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') end  as 'SiteType'
	FROM ExLinkMod ex WITH(NOLOCK) 
    INNER JOIN Sites s WITH(NOLOCK) on s.SiteID = ex.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s.modclassid
	WHERE ex.Status = 2 AND ex.LockedBy = @userid AND ex.ComplaintText IS NULL
	GROUP BY mc.maxage,
		 dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType')
)
UNION ALL
(
	SELECT 'exlinkcomplaint',
		'queuedreffered',
		count(*) as 'total',
		min(ex.datequeued) mindatequeued,
		fastmod = 0,
		mc.maxage - datediff(minute, min(ex.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType') end  as 'SiteType'
    FROM (  --No primary key on group members - this sub-query causes a better plan
			--to be generated by SQL Server
            SELECT DISTINCT s.siteid,s.modclassid
			FROM Sites s WITH(NOLOCK)
			LEFT JOIN GroupMembers gm WITH(NOLOCK) on gm.siteid=s.siteid AND gm.UserID = @userid
			WHERE (@issuperuser = 1 OR gm.GroupID = @refereegroupid  )
         ) as s1
	INNER JOIN ExlinkMod ex WITH(NOLOCK) on ex.SiteID = s1.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s1.modclassid
	WHERE ex.Status = 2 AND ex.complainttext IS NOT NULL AND ex.LockedBy IS NULL 
	GROUP BY  mc.maxage,
			dbo.udf_getsiteoptionsetting(s1.siteid, 'General', 'SiteType')
)
UNION ALL
(
	SELECT 'exlinkcomplaint',
		'lockedreffered',
		count(*) as 'total',
		min(ex.datequeued) mindatequeued,
		fastmod = 0,
		mc.maxage - datediff(minute, min(ex.datequeued), getdate()),
		case when dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') is null then 0 else dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType') end  as 'SiteType'
	FROM ExLinkMod ex WITH(NOLOCK)
    INNER JOIN Sites s WITH(NOLOCK) on s.SiteID = ex.SiteID
    INNER JOIN ModerationClass mc WITH(NOLOCK) on mc.modclassid = s.modclassid
	WHERE ex.Status = 2 AND ex.complainttext IS NOT NULL AND ex.LockedBy = @userid 
	group by  mc.maxage,
		 dbo.udf_getsiteoptionsetting(s.siteid, 'General', 'SiteType')
)

OPTION (OPTIMIZE FOR (@userid=6))